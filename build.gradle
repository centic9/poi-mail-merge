apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'jacoco'
apply plugin: 'application'

mainClassName = "org.dstadler.poi.mailmerge.MailMerge"
version = '1.0'
sourceCompatibility = 1.8

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

jar {
    manifest {
        attributes 'Implementation-Title': 'Application to produce mail-merge document from a template and a list of values', 'Implementation-Version': version
    }
}

repositories {
	mavenCentral()
}

dependencies {
	compile 'org.apache.commons:commons-lang3:3.4'
	compile 'org.dstadler:commons-dost:1+'

	compile 'org.apache.commons:commons-csv:1.2'

	compile 'org.apache.poi:poi:3.15-beta1'
	compile 'org.apache.poi:poi-ooxml:3.15-beta1'
	compile 'org.apache.poi:poi-scratchpad:3.15-beta1'
	/* For testing with latest pre-releases of POI:
	compile files('/tmp/poi-3.14-beta1/ooxml-lib/xmlbeans-2.6.0.jar')
	compile files('/tmp/poi-3.14-beta1/poi-3.14-beta1-20151214.jar')
	compile files('/tmp/poi-3.14-beta1/poi-ooxml-3.14-beta1-20151214.jar')
	compile files('/tmp/poi-3.14-beta1/poi-ooxml-schemas-3.14-beta1-20151214.jar')
	compile files('/tmp/poi-3.14-beta1/poi-scratchpad-3.14-beta1-20151214.jar')
	*/
	
	testCompile "junit:junit:[4.12,)"
}

// work around unnecessary timestamp in generated file which always causes dirty files in version control
// https://issues.gradle.org/browse/GRADLE-2293
task adjustEclipseSettingsFile << {
	ant.replaceregexp(match:'^#.*', replace:'', flags:'g', byline:true) {
		fileset(dir: project.projectDir, includes: '.settings/org.eclipse.jdt.core.prefs,.settings/com.google.gdt.eclipse.core.prefs')
	}
}
task sortEclipseSettingsFile << {
	new File(project.projectDir, '.settings/org.eclipse.jdt.core.prefs').with { it.text = it.readLines().findAll { it }.sort().join('\n') }
	new File(project.projectDir, '.classpath').with { it.text = it.readLines().findAll { it }.unique().join('\n') }
	File file = new File(project.projectDir, '.settings/com.google.gdt.eclipse.core.prefs');
	if(file.exists()) {
		file.with { it.text = it.readLines().findAll { it }.sort().join('\n') }
	}
	ant.fixcrlf(srcDir: '.settings', eol: 'lf')
}
eclipseJdt.finalizedBy adjustEclipseSettingsFile
eclipseJdt.finalizedBy sortEclipseSettingsFile

task wrapper(type: Wrapper) {
    gradleVersion = '2.13'
}

task adjustWrapperPropertiesFile << {
	ant.replaceregexp(match:'^#.*', replace:'', flags:'g', byline:true) {
		fileset(dir: project.projectDir, includes: 'gradle/wrapper/gradle-wrapper.properties')
	}
	new File(project.projectDir, 'gradle/wrapper/gradle-wrapper.properties').with { it.text = it.readLines().findAll { it }.sort().join('\n') }
	ant.fixcrlf(file: 'gradle/wrapper/gradle-wrapper.properties', eol: 'lf')
}
wrapper.finalizedBy adjustWrapperPropertiesFile

test {
	systemProperties = System.properties

	// enable to show standard out and standard error of the test JVM(s) on the console
	// testLogging.showStandardStreams = true

	// http://forums.gradle.org/gradle/topics/jacoco_related_failure_in_multiproject_build
	systemProperties['user.dir'] = workingDir
}

jacoco {
	toolVersion = "0.7.5.201505241946"
}
